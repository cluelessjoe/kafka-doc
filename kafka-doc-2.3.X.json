[{"Category":"broker","Name":"zookeeper.connect","Description":"Specifies the ZooKeeper connection string in the form hostname:port where host and port are the host and port of a ZooKeeper server. To allow connecting through other ZooKeeper nodes when that ZooKeeper machine is down you can also specify multiple hosts in the form hostname1:port1,hostname2:port2,hostname3:port3.\nThe server can also have a ZooKeeper chroot path as part of its ZooKeeper connection string which puts its data under some path in the global ZooKeeper namespace. For example to give a chroot path of /chroot/path you would give the connection string as hostname1:port1,hostname2:port2,hostname3:port3/chroot/path.","Type":"string","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"advertised.host.name","Description":"DEPRECATED: only used when advertised.listeners or listeners are not set. Use advertised.listeners instead. \nHostname to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, it will use the value for host.name if configured. Otherwise it will use the value returned from java.net.InetAddress.getCanonicalHostName().","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"advertised.listeners","Description":"Listeners to publish to ZooKeeper for clients to use, if different than the listeners config property. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, the value for listeners will be used. Unlike listeners it is not valid to advertise the 0.0.0.0 meta-address.","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"advertised.port","Description":"DEPRECATED: only used when advertised.listeners or listeners are not set. Use advertised.listeners instead. \nThe port to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the port to which the broker binds. If this is not set, it will publish the same port that the broker binds to.","Type":"int","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"auto.create.topics.enable","Description":"Enable auto creation of topic on the server","Type":"boolean","Default":"true","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"auto.leader.rebalance.enable","Description":"Enables auto leader balancing. A background thread checks and triggers leader balance if required at regular intervals","Type":"boolean","Default":"true","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"background.threads","Description":"The number of threads to use for various background processing tasks","Type":"int","Default":"10","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"broker.id","Description":"The broker id for this server. If unset, a unique broker id will be generated.To avoid conflicts between zookeeper generated broker id's and user configured broker id's, generated broker ids start from reserved.broker.max.id + 1.","Type":"int","Default":"-1","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"compression.type","Description":"Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.","Type":"string","Default":"producer","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"control.plane.listener.name","Description":"Name of listener used for communication between controller and brokers. Broker will use the control.plane.listener.name to locate the endpoint in listeners list, to listen for connections from the controller. For example, if a broker's config is :\nlisteners = INTERNAL://192.1.1.8:9092, EXTERNAL://10.1.1.5:9093, CONTROLLER://192.1.1.8:9094\nlistener.security.protocol.map = INTERNAL:PLAINTEXT, EXTERNAL:SSL, CONTROLLER:SSL\ncontrol.plane.listener.name = CONTROLLER\nOn startup, the broker will start listening on \"192.1.1.8:9094\" with security protocol \"SSL\".\nOn controller side, when it discovers a broker's published endpoints through zookeeper, it will use the control.plane.listener.name to find the endpoint, which it will use to establish connection to the broker.\nFor example, if the broker's published endpoints on zookeeper are :\n\"endpoints\" : [\"INTERNAL://broker1.example.com:9092\",\"EXTERNAL://broker1.example.com:9093\",\"CONTROLLER://broker1.example.com:9094\"]\n and the controller's config is :\nlistener.security.protocol.map = INTERNAL:PLAINTEXT, EXTERNAL:SSL, CONTROLLER:SSL\ncontrol.plane.listener.name = CONTROLLER\nthen controller will use \"broker1.example.com:9094\" with security protocol \"SSL\" to connect to the broker.\nIf not explicitly configured, the default value will be null and there will be no dedicated endpoints for controller connections.","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"delete.topic.enable","Description":"Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off","Type":"boolean","Default":"true","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"host.name","Description":"DEPRECATED: only used when listeners is not set. Use listeners instead. \nhostname of broker. If this is set, it will only bind to this address. If this is not set, it will bind to all interfaces","Type":"string","Default":"\"\"","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"leader.imbalance.check.interval.seconds","Description":"The frequency with which the partition rebalance check is triggered by the controller","Type":"long","Default":"300","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"leader.imbalance.per.broker.percentage","Description":"The ratio of leader imbalance allowed per broker. The controller would trigger a leader balance if it goes above this value per broker. The value is specified in percentage.","Type":"int","Default":"10","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"listeners","Description":"Listener List - Comma-separated list of URIs we will listen on and the listener names. If the listener name is not a security protocol, listener.security.protocol.map must also be set.\n Specify hostname as 0.0.0.0 to bind to all interfaces.\n Leave hostname empty to bind to default interface.\n Examples of legal listener lists:\n PLAINTEXT://myhost:9092,SSL://:9091\n CLIENT://0.0.0.0:9092,REPLICATION://localhost:9093\n","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"log.dir","Description":"The directory in which the log data is kept (supplemental for log.dirs property)","Type":"string","Default":"/tmp/kafka-logs","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.dirs","Description":"The directories in which the log data is kept. If not set, the value in log.dir is used","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.flush.interval.messages","Description":"The number of messages accumulated on a log partition before messages are flushed to disk ","Type":"long","Default":"9223372036854775807","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.flush.interval.ms","Description":"The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used","Type":"long","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.flush.offset.checkpoint.interval.ms","Description":"The frequency with which we update the persistent record of the last flush which acts as the log recovery point","Type":"int","Default":"60000","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.flush.scheduler.interval.ms","Description":"The frequency in ms that the log flusher checks whether any log needs to be flushed to disk","Type":"long","Default":"9223372036854775807","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.flush.start.offset.checkpoint.interval.ms","Description":"The frequency with which we update the persistent record of log start offset","Type":"int","Default":"60000","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.retention.bytes","Description":"The maximum size of the log before deleting it","Type":"long","Default":"-1","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.retention.hours","Description":"The number of hours to keep a log file before deleting it (in hours), tertiary to log.retention.ms property","Type":"int","Default":"168","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.retention.minutes","Description":"The number of minutes to keep a log file before deleting it (in minutes), secondary to log.retention.ms property. If not set, the value in log.retention.hours is used","Type":"int","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.retention.ms","Description":"The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.","Type":"long","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.roll.hours","Description":"The maximum time before a new log segment is rolled out (in hours), secondary to log.roll.ms property","Type":"int","Default":"168","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.roll.jitter.hours","Description":"The maximum jitter to subtract from logRollTimeMillis (in hours), secondary to log.roll.jitter.ms property","Type":"int","Default":"0","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.roll.jitter.ms","Description":"The maximum jitter to subtract from logRollTimeMillis (in milliseconds). If not set, the value in log.roll.jitter.hours is used","Type":"long","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.roll.ms","Description":"The maximum time before a new log segment is rolled out (in milliseconds). If not set, the value in log.roll.hours is used","Type":"long","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.segment.bytes","Description":"The maximum size of a single log file","Type":"int","Default":"1073741824","ValidValues":"[14,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.segment.delete.delay.ms","Description":"The amount of time to wait before deleting a file from the filesystem","Type":"long","Default":"60000","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"message.max.bytes","Description":"The largest record batch size allowed by Kafka. If this is increased and there are consumers older than 0.10.2, the consumers' fetch size must also be increased so that the they can fetch record batches this large.In the latest message format version, records are always grouped into batches for efficiency. In previous message format versions, uncompressed records are not grouped into batches and this limit only applies to a single record in that case.This can be set per topic with the topic level max.message.bytes config.","Type":"int","Default":"1000012","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"min.insync.replicas","Description":"When a producer sets acks to \"all\" (or \"-1\"), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception (either NotEnoughReplicas or NotEnoughReplicasAfterAppend).When used together, min.insync.replicas and acks allow you to enforce greater durability guarantees. A typical scenario would be to create a topic with a replication factor of 3, set min.insync.replicas to 2, and produce with acks of \"all\". This will ensure that the producer raises an exception if a majority of replicas do not receive a write.","Type":"int","Default":"1","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"num.io.threads","Description":"The number of threads that the server uses for processing requests, which may include disk I/O","Type":"int","Default":"8","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"num.network.threads","Description":"The number of threads that the server uses for receiving requests from the network and sending responses to the network","Type":"int","Default":"3","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"num.recovery.threads.per.data.dir","Description":"The number of threads per data directory to be used for log recovery at startup and flushing at shutdown","Type":"int","Default":"1","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"num.replica.alter.log.dirs.threads","Description":"The number of threads that can move replicas between log directories, which may include disk I/O","Type":"int","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"num.replica.fetchers","Description":"Number of fetcher threads used to replicate messages from a source broker. Increasing this value can increase the degree of I/O parallelism in the follower broker.","Type":"int","Default":"1","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"offset.metadata.max.bytes","Description":"The maximum size for a metadata entry associated with an offset commit","Type":"int","Default":"4096","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.commit.required.acks","Description":"The required acks before the commit can be accepted. In general, the default (-1) should not be overridden","Type":"short","Default":"-1","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.commit.timeout.ms","Description":"Offset commit will be delayed until all replicas for the offsets topic receive the commit or this timeout is reached. This is similar to the producer request timeout.","Type":"int","Default":"5000","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.load.buffer.size","Description":"Batch size for reading from the offsets segments when loading offsets into the cache (soft-limit, overridden if records are too large).","Type":"int","Default":"5242880","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.retention.check.interval.ms","Description":"Frequency at which to check for stale offsets","Type":"long","Default":"600000","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.retention.minutes","Description":"After a consumer group loses all its consumers (i.e. becomes empty) its offsets will be kept for this retention period before getting discarded. For standalone consumers (using manual assignment), offsets will be expired after the time of last commit plus this retention period.","Type":"int","Default":"10080","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.topic.compression.codec","Description":"Compression codec for the offsets topic - compression may be used to achieve \"atomic\" commits","Type":"int","Default":"0","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.topic.num.partitions","Description":"The number of partitions for the offset commit topic (should not change after deployment)","Type":"int","Default":"50","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.topic.replication.factor","Description":"The replication factor for the offsets topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement.","Type":"short","Default":"3","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"offsets.topic.segment.bytes","Description":"The offsets topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads","Type":"int","Default":"104857600","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"port","Description":"DEPRECATED: only used when listeners is not set. Use listeners instead. \nthe port to listen and accept connections on","Type":"int","Default":"9092","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"queued.max.requests","Description":"The number of queued requests allowed for data-plane, before blocking the network threads","Type":"int","Default":"500","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"quota.consumer.default","Description":"DEPRECATED: Used only when dynamic default quotas are not configured for  or  in Zookeeper. Any consumer distinguished by clientId/consumer group will get throttled if it fetches more bytes than this value per-second","Type":"long","Default":"9223372036854775807","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"quota.producer.default","Description":"DEPRECATED: Used only when dynamic default quotas are not configured for ,  or  in Zookeeper. Any producer distinguished by clientId will get throttled if it produces more bytes than this value per-second","Type":"long","Default":"9223372036854775807","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.fetch.min.bytes","Description":"Minimum bytes expected for each fetch response. If not enough bytes, wait up to replicaMaxWaitTimeMs","Type":"int","Default":"1","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.fetch.wait.max.ms","Description":"max wait time for each fetcher request issued by follower replicas. This value should always be less than the replica.lag.time.max.ms at all times to prevent frequent shrinking of ISR for low throughput topics","Type":"int","Default":"500","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.high.watermark.checkpoint.interval.ms","Description":"The frequency with which the high watermark is saved out to disk","Type":"long","Default":"5000","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.lag.time.max.ms","Description":"If a follower hasn't sent any fetch requests or hasn't consumed up to the leaders log end offset for at least this time, the leader will remove the follower from isr","Type":"long","Default":"10000","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.socket.receive.buffer.bytes","Description":"The socket receive buffer for network requests","Type":"int","Default":"65536","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.socket.timeout.ms","Description":"The socket timeout for network requests. Its value should be at least replica.fetch.wait.max.ms","Type":"int","Default":"30000","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"request.timeout.ms","Description":"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.","Type":"int","Default":"30000","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"socket.receive.buffer.bytes","Description":"The SO_RCVBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.","Type":"int","Default":"102400","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"socket.request.max.bytes","Description":"The maximum number of bytes in a socket request","Type":"int","Default":"104857600","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"socket.send.buffer.bytes","Description":"The SO_SNDBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.","Type":"int","Default":"102400","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.max.timeout.ms","Description":"The maximum allowed timeout for transactions. If a client’s requested transaction time exceed this, then the broker will return an error in InitProducerIdRequest. This prevents a client from too large of a timeout, which can stall consumers reading from topics included in the transaction.","Type":"int","Default":"900000","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.state.log.load.buffer.size","Description":"Batch size for reading from the transaction log segments when loading producer ids and transactions into the cache (soft-limit, overridden if records are too large).","Type":"int","Default":"5242880","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.state.log.min.isr","Description":"Overridden min.insync.replicas config for the transaction topic.","Type":"int","Default":"2","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.state.log.num.partitions","Description":"The number of partitions for the transaction topic (should not change after deployment).","Type":"int","Default":"50","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.state.log.replication.factor","Description":"The replication factor for the transaction topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement.","Type":"short","Default":"3","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.state.log.segment.bytes","Description":"The transaction topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads","Type":"int","Default":"104857600","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transactional.id.expiration.ms","Description":"The maximum amount of time in ms that the transaction coordinator will wait before proactively expire a producer's transactional id without receiving any transaction status updates from it.","Type":"int","Default":"604800000","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"unclean.leader.election.enable","Description":"Indicates whether to enable replicas not in the ISR set to be elected as leader as a last resort, even though doing so may result in data loss","Type":"boolean","Default":"false","ValidValues":"","Importance":"high","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"zookeeper.connection.timeout.ms","Description":"The max time that the client waits to establish a connection to zookeeper. If not set, the value in zookeeper.session.timeout.ms is used","Type":"int","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"zookeeper.max.in.flight.requests","Description":"The maximum number of unacknowledged requests the client will send to Zookeeper before blocking.","Type":"int","Default":"10","ValidValues":"[1,...]","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"zookeeper.session.timeout.ms","Description":"Zookeeper session timeout","Type":"int","Default":"6000","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"zookeeper.set.acl","Description":"Set client to use secure ACLs","Type":"boolean","Default":"false","ValidValues":"","Importance":"high","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"broker.id.generation.enable","Description":"Enable automatic broker id generation on the server. When enabled the value configured for reserved.broker.max.id should be reviewed.","Type":"boolean","Default":"true","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"broker.rack","Description":"Rack of the broker. This will be used in rack aware replication assignment for fault tolerance. Examples: `RACK1`, `us-east-1d`","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"connections.max.idle.ms","Description":"Idle connections timeout: the server socket processor threads close the connections that idle more than this","Type":"long","Default":"600000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"connections.max.reauth.ms","Description":"When explicitly set to a positive number (the default is 0, not a positive number), a session lifetime that will not exceed the configured value will be communicated to v2.2.0 or later clients when they authenticate. The broker will disconnect any such connection that is not re-authenticated within the session lifetime and that is then subsequently used for any purpose other than re-authentication. Configuration names can optionally be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.oauthbearer.connections.max.reauth.ms=3600000","Type":"long","Default":"0","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"controlled.shutdown.enable","Description":"Enable controlled shutdown of the server","Type":"boolean","Default":"true","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"controlled.shutdown.max.retries","Description":"Controlled shutdown can fail for multiple reasons. This determines the number of retries when such failure happens","Type":"int","Default":"3","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"controlled.shutdown.retry.backoff.ms","Description":"Before each retry, the system needs time to recover from the state that caused the previous failure (Controller fail over, replica lag etc). This config determines the amount of time to wait before retrying.","Type":"long","Default":"5000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"controller.socket.timeout.ms","Description":"The socket timeout for controller-to-broker channels","Type":"int","Default":"30000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"default.replication.factor","Description":"default replication factors for automatically created topics","Type":"int","Default":"1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"delegation.token.expiry.time.ms","Description":"The token validity time in miliseconds before the token needs to be renewed. Default value 1 day.","Type":"long","Default":"86400000","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"delegation.token.master.key","Description":"Master/secret key to generate and verify delegation tokens. Same key must be configured across all the brokers.  If the key is not set or set to empty string, brokers will disable the delegation token support.","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"delegation.token.max.lifetime.ms","Description":"The token has a maximum lifetime beyond which it cannot be renewed anymore. Default value 7 days.","Type":"long","Default":"604800000","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"delete.records.purgatory.purge.interval.requests","Description":"The purge interval (in number of requests) of the delete records request purgatory","Type":"int","Default":"1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"fetch.purgatory.purge.interval.requests","Description":"The purge interval (in number of requests) of the fetch request purgatory","Type":"int","Default":"1000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"group.initial.rebalance.delay.ms","Description":"The amount of time the group coordinator will wait for more consumers to join a new group before performing the first rebalance. A longer delay means potentially fewer rebalances, but increases the time until processing begins.","Type":"int","Default":"3000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"group.max.session.timeout.ms","Description":"The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.","Type":"int","Default":"1800000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"group.max.size","Description":"The maximum number of consumers that a single consumer group can accommodate.","Type":"int","Default":"2147483647","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"group.min.session.timeout.ms","Description":"The minimum allowed session timeout for registered consumers. Shorter timeouts result in quicker failure detection at the cost of more frequent consumer heartbeating, which can overwhelm broker resources.","Type":"int","Default":"6000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"inter.broker.listener.name","Description":"Name of listener used for communication between brokers. If this is unset, the listener name is defined by security.inter.broker.protocol. It is an error to set this and security.inter.broker.protocol properties at the same time.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"inter.broker.protocol.version","Description":"Specify which version of the inter-broker protocol will be used.\n This is typically bumped after all brokers were upgraded to a new version.\n Example of some valid values are: 0.8.0, 0.8.1, 0.8.1.1, 0.8.2, 0.8.2.0, 0.8.2.1, 0.9.0.0, 0.9.0.1 Check ApiVersion for the full list.","Type":"string","Default":"2.3-IV1","ValidValues":"[0.8.0, 0.8.1, 0.8.2, 0.9.0, 0.10.0-IV0, 0.10.0-IV1, 0.10.1-IV0, 0.10.1-IV1, 0.10.1-IV2, 0.10.2-IV0, 0.11.0-IV0, 0.11.0-IV1, 0.11.0-IV2, 1.0-IV0, 1.1-IV0, 2.0-IV0, 2.0-IV1, 2.1-IV0, 2.1-IV1, 2.1-IV2, 2.2-IV0, 2.2-IV1, 2.3-IV0, 2.3-IV1]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.backoff.ms","Description":"The amount of time to sleep when there are no logs to clean","Type":"long","Default":"15000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.dedupe.buffer.size","Description":"The total memory used for log deduplication across all cleaner threads","Type":"long","Default":"134217728","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.delete.retention.ms","Description":"How long are delete records retained?","Type":"long","Default":"86400000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.enable","Description":"Enable the log cleaner process to run on the server. Should be enabled if using any topics with a cleanup.policy=compact including the internal offsets topic. If disabled those topics will not be compacted and continually grow in size.","Type":"boolean","Default":"true","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.io.buffer.load.factor","Description":"Log cleaner dedupe buffer load factor. The percentage full the dedupe buffer can become. A higher value will allow more log to be cleaned at once but will lead to more hash collisions","Type":"double","Default":"0.9","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.io.buffer.size","Description":"The total memory used for log cleaner I/O buffers across all cleaner threads","Type":"int","Default":"524288","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.io.max.bytes.per.second","Description":"The log cleaner will be throttled so that the sum of its read and write i/o will be less than this value on average","Type":"double","Default":"1.7976931348623157E308","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.max.compaction.lag.ms","Description":"The maximum time a message will remain ineligible for compaction in the log. Only applicable for logs that are being compacted.","Type":"long","Default":"9223372036854775807","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.min.cleanable.ratio","Description":"The minimum ratio of dirty log to total log for a log to eligible for cleaning. If the log.cleaner.max.compaction.lag.ms or the log.cleaner.min.compaction.lag.ms configurations are also specified, then the log compactor considers the log eligible for compaction as soon as either: (i) the dirty ratio threshold has been met and the log has had dirty (uncompacted) records for at least the log.cleaner.min.compaction.lag.ms duration, or (ii) if the log has had dirty (uncompacted) records for at most the log.cleaner.max.compaction.lag.ms period.","Type":"double","Default":"0.5","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.min.compaction.lag.ms","Description":"The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.","Type":"long","Default":"0","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleaner.threads","Description":"The number of background threads to use for log cleaning","Type":"int","Default":"1","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.cleanup.policy","Description":"The default cleanup policy for segments beyond the retention window. A comma separated list of valid policies. Valid policies are: \"delete\" and \"compact\"","Type":"list","Default":"delete","ValidValues":"[compact, delete]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.index.interval.bytes","Description":"The interval with which we add an entry to the offset index","Type":"int","Default":"4096","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.index.size.max.bytes","Description":"The maximum size in bytes of the offset index","Type":"int","Default":"10485760","ValidValues":"[4,...]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.message.format.version","Description":"Specify the message format version the broker will use to append messages to the logs. The value should be a valid ApiVersion. Some examples are: 0.8.2, 0.9.0.0, 0.10.0, check ApiVersion for more details. By setting a particular message format version, the user is certifying that all the existing messages on disk are smaller or equal than the specified version. Setting this value incorrectly will cause consumers with older versions to break as they will receive messages with a format that they don't understand.","Type":"string","Default":"2.3-IV1","ValidValues":"[0.8.0, 0.8.1, 0.8.2, 0.9.0, 0.10.0-IV0, 0.10.0-IV1, 0.10.1-IV0, 0.10.1-IV1, 0.10.1-IV2, 0.10.2-IV0, 0.11.0-IV0, 0.11.0-IV1, 0.11.0-IV2, 1.0-IV0, 1.1-IV0, 2.0-IV0, 2.0-IV1, 2.1-IV0, 2.1-IV1, 2.1-IV2, 2.2-IV0, 2.2-IV1, 2.3-IV0, 2.3-IV1]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"log.message.timestamp.difference.max.ms","Description":"The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message. If log.message.timestamp.type=CreateTime, a message will be rejected if the difference in timestamp exceeds this threshold. This configuration is ignored if log.message.timestamp.type=LogAppendTime.The maximum timestamp difference allowed should be no greater than log.retention.ms to avoid unnecessarily frequent log rolling.","Type":"long","Default":"9223372036854775807","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.message.timestamp.type","Description":"Define whether the timestamp in the message is message create time or log append time. The value should be either `CreateTime` or `LogAppendTime`","Type":"string","Default":"CreateTime","ValidValues":"[CreateTime, LogAppendTime]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.preallocate","Description":"Should pre allocate file when create new segment? If you are using Kafka on Windows, you probably need to set it to true.","Type":"boolean","Default":"false","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"log.retention.check.interval.ms","Description":"The frequency in milliseconds that the log cleaner checks whether any log is eligible for deletion","Type":"long","Default":"300000","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"max.connections","Description":"The maximum number of connections we allow in the broker at any time. This limit is applied in addition to any per-ip limits configured using max.connections.per.ip. Listener-level limits may also be configured by prefixing the config name with the listener prefix, for example, listener.name.internal.max.connections. Broker-wide limit should be configured based on broker capacity while listener limits should be configured based on application requirements. New connections are blocked if either the listener or broker limit is reached. Connections on the inter-broker listener are permitted even if broker-wide limit is reached. The least recently used connection on another listener will be closed in this case.","Type":"int","Default":"2147483647","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"max.connections.per.ip","Description":"The maximum number of connections we allow from each ip address. This can be set to 0 if there are overrides configured using max.connections.per.ip.overrides property. New connections from the ip address are dropped if the limit is reached.","Type":"int","Default":"2147483647","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"max.connections.per.ip.overrides","Description":"A comma-separated list of per-ip or hostname overrides to the default maximum number of connections. An example value is \"hostName:100,127.0.0.1:200\"","Type":"string","Default":"\"\"","ValidValues":"","Importance":"medium","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"max.incremental.fetch.session.cache.slots","Description":"The maximum number of incremental fetch sessions that we will maintain.","Type":"int","Default":"1000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"num.partitions","Description":"The default number of log partitions per topic","Type":"int","Default":"1","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"password.encoder.old.secret","Description":"The old secret that was used for encoding dynamically configured passwords. This is required only when the secret is updated. If specified, all dynamically encoded passwords are decoded using this old secret and re-encoded using password.encoder.secret when broker starts up.","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"password.encoder.secret","Description":"The secret used for encoding dynamically configured passwords for this broker.","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"principal.builder.class","Description":"The fully qualified name of a class that implements the KafkaPrincipalBuilder interface, which is used to build the KafkaPrincipal object used during authorization. This config also supports the deprecated PrincipalBuilder interface which was previously used for client authentication over SSL. If no principal builder is defined, the default behavior depends on the security protocol in use. For SSL authentication,  the principal will be derived using the rules defined by ssl.principal.mapping.rules applied on the distinguished name from the client certificate if one is provided; otherwise, if client authentication is not required, the principal name will be ANONYMOUS. For SASL authentication, the principal will be derived using the rules defined by sasl.kerberos.principal.to.local.rules if GSSAPI is in use, and the SASL authentication ID for other mechanisms. For PLAINTEXT, the principal will be ANONYMOUS.","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"producer.purgatory.purge.interval.requests","Description":"The purge interval (in number of requests) of the producer request purgatory","Type":"int","Default":"1000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"queued.max.request.bytes","Description":"The number of queued bytes allowed before no more requests are read","Type":"long","Default":"-1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.fetch.backoff.ms","Description":"The amount of time to sleep when fetch partition error occurs.","Type":"int","Default":"1000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.fetch.max.bytes","Description":"The number of bytes of messages to attempt to fetch for each partition. This is not an absolute maximum, if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. The maximum record batch size accepted by the broker is defined via message.max.bytes (broker config) or max.message.bytes (topic config).","Type":"int","Default":"1048576","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replica.fetch.response.max.bytes","Description":"Maximum bytes expected for the entire fetch response. Records are fetched in batches, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. As such, this is not an absolute maximum. The maximum record batch size accepted by the broker is defined via message.max.bytes (broker config) or max.message.bytes (topic config).","Type":"int","Default":"10485760","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"reserved.broker.max.id","Description":"Max number that can be used for a broker.id","Type":"int","Default":"1000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.client.callback.handler.class","Description":"The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.enabled.mechanisms","Description":"The list of SASL mechanisms enabled in the Kafka server. The list may contain any mechanism for which a security provider is available. Only GSSAPI is enabled by default.","Type":"list","Default":"GSSAPI","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.jaas.config","Description":"JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described here. The format for the value is: 'loginModuleClass controlFlag (optionName=optionValue)*;'. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.kerberos.kinit.cmd","Description":"Kerberos kinit command path.","Type":"string","Default":"/usr/bin/kinit","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.kerberos.min.time.before.relogin","Description":"Login thread sleep time between refresh attempts.","Type":"long","Default":"60000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.kerberos.principal.to.local.rules","Description":"A list of rules for mapping from principal names to short names (typically operating system usernames). The rules are evaluated in order and the first rule that matches a principal name is used to map it to a short name. Any later rules in the list are ignored. By default, principal names of the form {username}/{hostname}@{REALM} are mapped to {username}. For more details on the format please see  security authorization and acls. Note that this configuration is ignored if an extension of KafkaPrincipalBuilder is provided by the principal.builder.class configuration.","Type":"list","Default":"DEFAULT","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.kerberos.service.name","Description":"The Kerberos principal name that Kafka runs as. This can be defined either in Kafka's JAAS config or in Kafka's config.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.kerberos.ticket.renew.jitter","Description":"Percentage of random jitter added to the renewal time.","Type":"double","Default":"0.05","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.kerberos.ticket.renew.window.factor","Description":"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket.","Type":"double","Default":"0.8","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.login.callback.handler.class","Description":"The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.login.class","Description":"The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.login.refresh.buffer.seconds","Description":"The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"300","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.login.refresh.min.period.seconds","Description":"The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"60","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.login.refresh.window.factor","Description":"Login refresh thread will sleep until the specified window factor relative to the credential's lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.8","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.login.refresh.window.jitter","Description":"The maximum amount of random jitter relative to the credential's lifetime that is added to the login refresh thread's sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.05","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.mechanism.inter.broker.protocol","Description":"SASL mechanism used for inter-broker communication. Default is GSSAPI.","Type":"string","Default":"GSSAPI","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"sasl.server.callback.handler.class","Description":"The fully qualified name of a SASL server callback handler class that implements the AuthenticateCallbackHandler interface. Server callback handlers must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.plain.sasl.server.callback.handler.class=com.example.CustomPlainCallbackHandler.","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"security.inter.broker.protocol","Description":"Security protocol used to communicate between brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL. It is an error to set this and inter.broker.listener.name properties at the same time.","Type":"string","Default":"PLAINTEXT","ValidValues":"","Importance":"medium","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.cipher.suites","Description":"A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.","Type":"list","Default":"\"\"","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.client.auth","Description":"Configures kafka broker to request client authentication. The following settings are common:   ssl.client.auth=required If set to required client authentication is required. ssl.client.auth=requested This means client authentication is optional. unlike requested , if this option is set client can choose not to provide authentication information about itself ssl.client.auth=none This means client authentication is not needed.","Type":"string","Default":"none","ValidValues":"[required, requested, none]","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.enabled.protocols","Description":"The list of protocols enabled for SSL connections.","Type":"list","Default":"TLSv1.2,TLSv1.1,TLSv1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.key.password","Description":"The password of the private key in the key store file. This is optional for client.","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.keymanager.algorithm","Description":"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"SunX509","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.keystore.location","Description":"The location of the key store file. This is optional for client and can be used for two-way authentication for client.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.keystore.password","Description":"The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured. ","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.keystore.type","Description":"The file format of the key store file. This is optional for client.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.protocol","Description":"The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.","Type":"string","Default":"TLS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.provider","Description":"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.trustmanager.algorithm","Description":"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"PKIX","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.truststore.location","Description":"The location of the trust store file. ","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.truststore.password","Description":"The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.truststore.type","Description":"The file format of the trust store file.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"alter.config.policy.class.name","Description":"The alter configs policy class that should be used for validation. The class should implement the org.apache.kafka.server.policy.AlterConfigPolicy interface.","Type":"class","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"alter.log.dirs.replication.quota.window.num","Description":"The number of samples to retain in memory for alter log dirs replication quotas","Type":"int","Default":"11","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"alter.log.dirs.replication.quota.window.size.seconds","Description":"The time span of each sample for alter log dirs replication quotas","Type":"int","Default":"1","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"authorizer.class.name","Description":"The authorizer class that should be used for authorization","Type":"string","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"client.quota.callback.class","Description":"The fully qualified name of a class that implements the ClientQuotaCallback interface, which is used to determine quota limits applied to client requests. By default, ,  or  quotas stored in ZooKeeper are applied. For any given request, the most specific quota that matches the user principal of the session and the client-id of the request is applied.","Type":"class","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"connection.failed.authentication.delay.ms","Description":"Connection close delay on failed authentication: this is the time (in milliseconds) by which connection close will be delayed on authentication failure. This must be configured to be less than connections.max.idle.ms to prevent connection timeout.","Type":"int","Default":"100","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"create.topic.policy.class.name","Description":"The create topic policy class that should be used for validation. The class should implement the org.apache.kafka.server.policy.CreateTopicPolicy interface.","Type":"class","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"delegation.token.expiry.check.interval.ms","Description":"Scan interval to remove expired delegation tokens.","Type":"long","Default":"3600000","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"kafka.metrics.polling.interval.secs","Description":"The metrics polling interval (in seconds) which can be used in kafka.metrics.reporters implementations.","Type":"int","Default":"10","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"kafka.metrics.reporters","Description":"A list of classes to use as Yammer metrics custom reporters. The reporters should implement kafka.metrics.KafkaMetricsReporter trait. If a client wants to expose JMX operations on a custom reporter, the custom reporter needs to additionally implement an MBean trait that extends kafka.metrics.KafkaMetricsReporterMBean trait so that the registered MBean is compliant with the standard MBean convention.","Type":"list","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"listener.security.protocol.map","Description":"Map between listener names and security protocols. This must be defined for the same security protocol to be usable in more than one port or IP. For example, internal and external traffic can be separated even if SSL is required for both. Concretely, the user could define listeners with names INTERNAL and EXTERNAL and this property as: `INTERNAL:SSL,EXTERNAL:SSL`. As shown, key and value are separated by a colon and map entries are separated by commas. Each listener name should only appear once in the map. Different security (SSL and SASL) settings can be configured for each listener by adding a normalised prefix (the listener name is lowercased) to the config name. For example, to set a different keystore for the INTERNAL listener, a config with name listener.name.internal.ssl.keystore.location would be set. If the config for the listener name is not set, the config will fallback to the generic config (i.e. ssl.keystore.location). ","Type":"string","Default":"PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL","ValidValues":"","Importance":"low","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"log.message.downconversion.enable","Description":"This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests. When set to false, broker will not perform down-conversion for consumers expecting an older message format. The broker responds with UNSUPPORTED_VERSION error for consume requests from such older clients. This configurationdoes not apply to any message format conversion that might be required for replication to followers.","Type":"boolean","Default":"true","ValidValues":"","Importance":"low","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"metric.reporters","Description":"A list of classes to use as metrics reporters. Implementing the org.apache.kafka.common.metrics.MetricsReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.","Type":"list","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"cluster-wide","ServerDefaultProperty":""},{"Category":"broker","Name":"metrics.num.samples","Description":"The number of samples maintained to compute metrics.","Type":"int","Default":"2","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"metrics.recording.level","Description":"The highest recording level for metrics.","Type":"string","Default":"INFO","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"metrics.sample.window.ms","Description":"The window of time a metrics sample is computed over.","Type":"long","Default":"30000","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"password.encoder.cipher.algorithm","Description":"The Cipher algorithm used for encoding dynamically configured passwords.","Type":"string","Default":"AES/CBC/PKCS5Padding","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"password.encoder.iterations","Description":"The iteration count used for encoding dynamically configured passwords.","Type":"int","Default":"4096","ValidValues":"[1024,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"password.encoder.key.length","Description":"The key length used for encoding dynamically configured passwords.","Type":"int","Default":"128","ValidValues":"[8,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"password.encoder.keyfactory.algorithm","Description":"The SecretKeyFactory algorithm used for encoding dynamically configured passwords. Default is PBKDF2WithHmacSHA512 if available and PBKDF2WithHmacSHA1 otherwise.","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"quota.window.num","Description":"The number of samples to retain in memory for client quotas","Type":"int","Default":"11","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"quota.window.size.seconds","Description":"The time span of each sample for client quotas","Type":"int","Default":"1","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replication.quota.window.num","Description":"The number of samples to retain in memory for replication quotas","Type":"int","Default":"11","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"replication.quota.window.size.seconds","Description":"The time span of each sample for replication quotas","Type":"int","Default":"1","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.endpoint.identification.algorithm","Description":"The endpoint identification algorithm to validate server hostname using server certificate. ","Type":"string","Default":"https","ValidValues":"","Importance":"low","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.principal.mapping.rules","Description":"A list of rules for mapping from distinguished name from the client certificate to short name. The rules are evaluated in order and the first rule that matches a principal name is used to map it to a short name. Any later rules in the list are ignored. By default, distinguished name of the X.500 certificate will be the principal. For more details on the format please see  security authorization and acls. Note that this configuration is ignored if an extension of KafkaPrincipalBuilder is provided by the principal.builder.class configuration.","Type":"list","Default":"DEFAULT","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"ssl.secure.random.implementation","Description":"The SecureRandom PRNG implementation to use for SSL cryptography operations. ","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"per-broker","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.abort.timed.out.transaction.cleanup.interval.ms","Description":"The interval at which to rollback transactions that have timed out","Type":"int","Default":"60000","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"transaction.remove.expired.transaction.cleanup.interval.ms","Description":"The interval at which to remove transactions that have expired due to transactional.id.expiration.ms passing","Type":"int","Default":"3600000","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"broker","Name":"zookeeper.sync.time.ms","Description":"How far a ZK follower can be behind a ZK leader","Type":"int","Default":"2000","ValidValues":"","Importance":"low","DynamicUpdateMode":"read-only","ServerDefaultProperty":""},{"Category":"topic","Name":"cleanup.policy","Description":"A string that is either \"delete\" or \"compact\" or both. This string designates the retention policy to use on old log segments. The default policy (\"delete\") will discard old segments when their retention time or size limit has been reached. The \"compact\" setting will enable log compaction on the topic.","Type":"list","Default":"delete","ValidValues":"[compact, delete]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.cleanup.policy"},{"Category":"topic","Name":"compression.type","Description":"Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.","Type":"string","Default":"producer","ValidValues":"[uncompressed, zstd, lz4, snappy, gzip, producer]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"compression.type"},{"Category":"topic","Name":"delete.retention.ms","Description":"The amount of time to retain delete tombstone markers for log compacted topics. This setting also gives a bound on the time in which a consumer must complete a read if they begin from offset 0 to ensure that they get a valid snapshot of the final stage (otherwise delete tombstones may be collected before they complete their scan).","Type":"long","Default":"86400000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.cleaner.delete.retention.ms"},{"Category":"topic","Name":"file.delete.delay.ms","Description":"The time to wait before deleting a file from the filesystem","Type":"long","Default":"60000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.segment.delete.delay.ms"},{"Category":"topic","Name":"flush.messages","Description":"This setting allows specifying an interval at which we will force an fsync of data written to the log. For example if this was set to 1 we would fsync after every message; if it were 5 we would fsync after every five messages. In general we recommend you not set this and use replication for durability and allow the operating system's background flush capabilities as it is more efficient. This setting can be overridden on a per-topic basis (see the per-topic configuration section).","Type":"long","Default":"9223372036854775807","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.flush.interval.messages"},{"Category":"topic","Name":"flush.ms","Description":"This setting allows specifying a time interval at which we will force an fsync of data written to the log. For example if this was set to 1000 we would fsync after 1000 ms had passed. In general we recommend you not set this and use replication for durability and allow the operating system's background flush capabilities as it is more efficient.","Type":"long","Default":"9223372036854775807","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.flush.interval.ms"},{"Category":"topic","Name":"follower.replication.throttled.replicas","Description":"A list of replicas for which log replication should be throttled on the follower side. The list should describe a set of replicas in the form [PartitionId]:[BrokerId],[PartitionId]:[BrokerId]:... or alternatively the wildcard '*' can be used to throttle all replicas for this topic.","Type":"list","Default":"\"\"","ValidValues":"[partitionId]:[brokerId],[partitionId]:[brokerId],...","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"follower.replication.throttled.replicas"},{"Category":"topic","Name":"index.interval.bytes","Description":"This setting controls how frequently Kafka adds an index entry to its offset index. The default setting ensures that we index a message roughly every 4096 bytes. More indexing allows reads to jump closer to the exact position in the log but makes the index larger. You probably don't need to change this.","Type":"int","Default":"4096","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.index.interval.bytes"},{"Category":"topic","Name":"leader.replication.throttled.replicas","Description":"A list of replicas for which log replication should be throttled on the leader side. The list should describe a set of replicas in the form [PartitionId]:[BrokerId],[PartitionId]:[BrokerId]:... or alternatively the wildcard '*' can be used to throttle all replicas for this topic.","Type":"list","Default":"\"\"","ValidValues":"[partitionId]:[brokerId],[partitionId]:[brokerId],...","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"leader.replication.throttled.replicas"},{"Category":"topic","Name":"max.compaction.lag.ms","Description":"The maximum time a message will remain ineligible for compaction in the log. Only applicable for logs that are being compacted.","Type":"long","Default":"9223372036854775807","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.cleaner.max.compaction.lag.ms"},{"Category":"topic","Name":"max.message.bytes","Description":"The largest record batch size allowed by Kafka. If this is increased and there are consumers older than 0.10.2, the consumers' fetch size must also be increased so that the they can fetch record batches this large.In the latest message format version, records are always grouped into batches for efficiency. In previous message format versions, uncompressed records are not grouped into batches and this limit only applies to a single record in that case.","Type":"int","Default":"1000012","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"message.max.bytes"},{"Category":"topic","Name":"message.format.version","Description":"Specify the message format version the broker will use to append messages to the logs. The value should be a valid ApiVersion. Some examples are: 0.8.2, 0.9.0.0, 0.10.0, check ApiVersion for more details. By setting a particular message format version, the user is certifying that all the existing messages on disk are smaller or equal than the specified version. Setting this value incorrectly will cause consumers with older versions to break as they will receive messages with a format that they don't understand.","Type":"string","Default":"2.3-IV1","ValidValues":"[0.8.0, 0.8.1, 0.8.2, 0.9.0, 0.10.0-IV0, 0.10.0-IV1, 0.10.1-IV0, 0.10.1-IV1, 0.10.1-IV2, 0.10.2-IV0, 0.11.0-IV0, 0.11.0-IV1, 0.11.0-IV2, 1.0-IV0, 1.1-IV0, 2.0-IV0, 2.0-IV1, 2.1-IV0, 2.1-IV1, 2.1-IV2, 2.2-IV0, 2.2-IV1, 2.3-IV0, 2.3-IV1]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.message.format.version"},{"Category":"topic","Name":"message.timestamp.difference.max.ms","Description":"The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message. If message.timestamp.type=CreateTime, a message will be rejected if the difference in timestamp exceeds this threshold. This configuration is ignored if message.timestamp.type=LogAppendTime.","Type":"long","Default":"9223372036854775807","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.message.timestamp.difference.max.ms"},{"Category":"topic","Name":"message.timestamp.type","Description":"Define whether the timestamp in the message is message create time or log append time. The value should be either `CreateTime` or `LogAppendTime`","Type":"string","Default":"CreateTime","ValidValues":"[CreateTime, LogAppendTime]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.message.timestamp.type"},{"Category":"topic","Name":"min.cleanable.dirty.ratio","Description":"This configuration controls how frequently the log compactor will attempt to clean the log (assuming log compaction is enabled). By default we will avoid cleaning a log where more than 50% of the log has been compacted. This ratio bounds the maximum space wasted in the log by duplicates (at 50% at most 50% of the log could be duplicates). A higher ratio will mean fewer, more efficient cleanings but will mean more wasted space in the log. If the max.compaction.lag.ms or the min.compaction.lag.ms configurations are also specified, then the log compactor considers the log eligible for compaction as soon as either: (i) the dirty ratio threshold has been met and the log has had dirty (uncompacted) records for at least the min.compaction.lag.ms duration, or (ii) if the log has had dirty (uncompacted) records for at most the max.compaction.lag.ms period.","Type":"double","Default":"0.5","ValidValues":"[0,...,1]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.cleaner.min.cleanable.ratio"},{"Category":"topic","Name":"min.compaction.lag.ms","Description":"The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.","Type":"long","Default":"0","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.cleaner.min.compaction.lag.ms"},{"Category":"topic","Name":"min.insync.replicas","Description":"When a producer sets acks to \"all\" (or \"-1\"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception (either NotEnoughReplicas or NotEnoughReplicasAfterAppend).When used together, min.insync.replicas and acks allow you to enforce greater durability guarantees. A typical scenario would be to create a topic with a replication factor of 3, set min.insync.replicas to 2, and produce with acks of \"all\". This will ensure that the producer raises an exception if a majority of replicas do not receive a write.","Type":"int","Default":"1","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"min.insync.replicas"},{"Category":"topic","Name":"preallocate","Description":"True if we should preallocate the file on disk when creating a new log segment.","Type":"boolean","Default":"false","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.preallocate"},{"Category":"topic","Name":"retention.bytes","Description":"This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the \"delete\" retention policy. By default there is no size limit only a time limit. Since this limit is enforced at the partition level, multiply it by the number of partitions to compute the topic retention in bytes.","Type":"long","Default":"-1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.retention.bytes"},{"Category":"topic","Name":"retention.ms","Description":"This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the \"delete\" retention policy. This represents an SLA on how soon consumers must read their data. If set to -1, no time limit is applied.","Type":"long","Default":"604800000","ValidValues":"[-1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.retention.ms"},{"Category":"topic","Name":"segment.bytes","Description":"This configuration controls the segment file size for the log. Retention and cleaning is always done a file at a time so a larger segment size means fewer files but less granular control over retention.","Type":"int","Default":"1073741824","ValidValues":"[14,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.segment.bytes"},{"Category":"topic","Name":"segment.index.bytes","Description":"This configuration controls the size of the index that maps offsets to file positions. We preallocate this index file and shrink it only after log rolls. You generally should not need to change this setting.","Type":"int","Default":"10485760","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.index.size.max.bytes"},{"Category":"topic","Name":"segment.jitter.ms","Description":"The maximum random jitter subtracted from the scheduled segment roll time to avoid thundering herds of segment rolling","Type":"long","Default":"0","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.roll.jitter.ms"},{"Category":"topic","Name":"segment.ms","Description":"This configuration controls the period of time after which Kafka will force the log to roll even if the segment file isn't full to ensure that retention can delete or compact old data.","Type":"long","Default":"604800000","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"log.roll.ms"},{"Category":"topic","Name":"unclean.leader.election.enable","Description":"Indicates whether to enable replicas not in the ISR set to be elected as leader as a last resort, even though doing so may result in data loss.","Type":"boolean","Default":"false","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":"unclean.leader.election.enable"},{"Category":"topic","Name":"message.downconversion.enable","Description":"This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests. When set to false, broker will not perform down-conversion for consumers expecting an older message format. The broker responds with UNSUPPORTED_VERSION error for consume requests from such older clients. This configurationdoes not apply to any message format conversion that might be required for replication to followers.","Type":"boolean","Default":"true","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":"log.message.downconversion.enable"},{"Category":"producer","Name":"key.serializer","Description":"Serializer class for key that implements the org.apache.kafka.common.serialization.Serializer interface.","Type":"class","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"value.serializer","Description":"Serializer class for value that implements the org.apache.kafka.common.serialization.Serializer interface.","Type":"class","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"acks","Description":"The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the  durability of records that are sent. The following settings are allowed:   acks=0 If set to zero then the producer will not wait for any acknowledgment from the server at all. The record will be immediately added to the socket buffer and considered sent. No guarantee can be made that the server has received the record in this case, and the retries configuration will not take effect (as the client won't generally know of any failures). The offset given back for each record will always be set to -1. acks=1 This will mean the leader will write the record to its local log but will respond without awaiting full acknowledgement from all followers. In this case should the leader fail immediately after acknowledging the record but before the followers have replicated it then the record will be lost. acks=all This means the leader will wait for the full set of in-sync replicas to acknowledge the record. This guarantees that the record will not be lost as long as at least one in-sync replica remains alive. This is the strongest available guarantee. This is equivalent to the acks=-1 setting.","Type":"string","Default":"1","ValidValues":"[all, -1, 0, 1]","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"bootstrap.servers","Description":"A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form host1:port1,host2:port2,.... Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).","Type":"list","Default":"\"\"","ValidValues":"non-null string","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"buffer.memory","Description":"The total bytes of memory the producer can use to buffer records waiting to be sent to the server. If records are sent faster than they can be delivered to the server the producer will block for max.block.ms after which it will throw an exception.This setting should correspond roughly to the total memory the producer will use, but is not a hard bound since not all memory the producer uses is used for buffering. Some additional memory will be used for compression (if compression is enabled) as well as for maintaining in-flight requests.","Type":"long","Default":"33554432","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"compression.type","Description":"The compression type for all data generated by the producer. The default is none (i.e. no compression). Valid  values are none, gzip, snappy, lz4, or zstd. Compression is of full batches of data, so the efficacy of batching will also impact the compression ratio (more batching means better compression).","Type":"string","Default":"none","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"retries","Description":"Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error. Note that this retry is no different than if the client resent the record upon receiving the error. Allowing retries without setting max.in.flight.requests.per.connection to 1 will potentially change the ordering of records because if two batches are sent to a single partition, and the first fails and is retried but the second succeeds, then the records in the second batch may appear first. Note additionally that produce requests will be failed before the number of retries has been exhausted if the timeout configured by delivery.timeout.ms expires first before successful acknowledgement. Users should generally prefer to leave this config unset and instead use delivery.timeout.ms to control retry behavior.","Type":"int","Default":"2147483647","ValidValues":"[0,...,2147483647]","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.key.password","Description":"The password of the private key in the key store file. This is optional for client.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.keystore.location","Description":"The location of the key store file. This is optional for client and can be used for two-way authentication for client.","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.keystore.password","Description":"The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured. ","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.truststore.location","Description":"The location of the trust store file. ","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.truststore.password","Description":"The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"batch.size","Description":"The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition. This helps performance on both the client and the server. This configuration controls the default batch size in bytes. No attempt will be made to batch records larger than this size. Requests sent to brokers will contain multiple batches, one for each partition with data available to be sent. A small batch size will make batching less common and may reduce throughput (a batch size of zero will disable batching entirely). A very large batch size may use memory a bit more wastefully as we will always allocate a buffer of the specified batch size in anticipation of additional records.","Type":"int","Default":"16384","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"client.dns.lookup","Description":"Controls how the client uses DNS lookups.If set to use_all_dns_ips then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.If the value is resolve_canonical_bootstrap_servers_only each entry will be resolved and expanded into a list of canonical names.","Type":"string","Default":"default","ValidValues":"[default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"client.id","Description":"An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.","Type":"string","Default":"\"\"","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"connections.max.idle.ms","Description":"Close idle connections after the number of milliseconds specified by this config.","Type":"long","Default":"540000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"delivery.timeout.ms","Description":"An upper bound on the time to report success or failure after a call to send() returns. This limits the total time that a record will be delayed prior to sending, the time to await acknowledgement from the broker (if expected), and the time allowed for retriable send failures. The producer may report failure to send a record earlier than this config if either an unrecoverable error is encountered, the retries have been exhausted, or the record is added to a batch which reached an earlier delivery expiration deadline. The value of this config should be greater than or equal to the sum of request.timeout.ms and linger.ms.","Type":"int","Default":"120000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"linger.ms","Description":"The producer groups together any records that arrive in between request transmissions into a single batched request. Normally this occurs only under load when records arrive faster than they can be sent out. However in some circumstances the client may want to reduce the number of requests even under moderate load. This setting accomplishes this by adding a small amount of artificial delay—that is, rather than immediately sending out a record the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together. This can be thought of as analogous to Nagle's algorithm in TCP. This setting gives the upper bound on the delay for batching: once we get batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if we have fewer than this many bytes accumulated for this partition we will 'linger' for the specified time waiting for more records to show up. This setting defaults to 0 (i.e. no delay). Setting linger.ms=5, for example, would have the effect of reducing the number of requests sent but would add up to 5ms of latency to records sent in the absence of load.","Type":"long","Default":"0","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"max.block.ms","Description":"The configuration controls how long KafkaProducer.send() and KafkaProducer.partitionsFor() will block.These methods can be blocked either because the buffer is full or metadata unavailable.Blocking in the user-supplied serializers or partitioner will not be counted against this timeout.","Type":"long","Default":"60000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"max.request.size","Description":"The maximum size of a request in bytes. This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests. This is also effectively a cap on the maximum record batch size. Note that the server has its own cap on record batch size which may be different from this.","Type":"int","Default":"1048576","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"partitioner.class","Description":"Partitioner class that implements the org.apache.kafka.clients.producer.Partitioner interface.","Type":"class","Default":"org.apache.kafka.clients.producer.internals.DefaultPartitioner","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"receive.buffer.bytes","Description":"The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.","Type":"int","Default":"32768","ValidValues":"[-1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"request.timeout.ms","Description":"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted. This should be larger than replica.lag.time.max.ms (a broker configuration) to reduce the possibility of message duplication due to unnecessary producer retries.","Type":"int","Default":"30000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.client.callback.handler.class","Description":"The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.jaas.config","Description":"JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described here. The format for the value is: 'loginModuleClass controlFlag (optionName=optionValue)*;'. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.kerberos.service.name","Description":"The Kerberos principal name that Kafka runs as. This can be defined either in Kafka's JAAS config or in Kafka's config.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.login.callback.handler.class","Description":"The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.login.class","Description":"The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.mechanism","Description":"SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.","Type":"string","Default":"GSSAPI","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"security.protocol","Description":"Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.","Type":"string","Default":"PLAINTEXT","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"send.buffer.bytes","Description":"The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.","Type":"int","Default":"131072","ValidValues":"[-1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.enabled.protocols","Description":"The list of protocols enabled for SSL connections.","Type":"list","Default":"TLSv1.2,TLSv1.1,TLSv1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.keystore.type","Description":"The file format of the key store file. This is optional for client.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.protocol","Description":"The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.","Type":"string","Default":"TLS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.provider","Description":"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.truststore.type","Description":"The file format of the trust store file.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"enable.idempotence","Description":"When set to 'true', the producer will ensure that exactly one copy of each message is written in the stream. If 'false', producer retries due to broker failures, etc., may write duplicates of the retried message in the stream. Note that enabling idempotence requires max.in.flight.requests.per.connection to be less than or equal to 5, retries to be greater than 0 and acks must be 'all'. If these values are not explicitly set by the user, suitable values will be chosen. If incompatible values are set, a ConfigException will be thrown.","Type":"boolean","Default":"false","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"interceptor.classes","Description":"A list of classes to use as interceptors. Implementing the org.apache.kafka.clients.producer.ProducerInterceptor interface allows you to intercept (and possibly mutate) the records received by the producer before they are published to the Kafka cluster. By default, there are no interceptors.","Type":"list","Default":"\"\"","ValidValues":"non-null string","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"max.in.flight.requests.per.connection","Description":"The maximum number of unacknowledged requests the client will send on a single connection before blocking. Note that if this setting is set to be greater than 1 and there are failed sends, there is a risk of message re-ordering due to retries (i.e., if retries are enabled).","Type":"int","Default":"5","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"metadata.max.age.ms","Description":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions.","Type":"long","Default":"300000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"metric.reporters","Description":"A list of classes to use as metrics reporters. Implementing the org.apache.kafka.common.metrics.MetricsReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.","Type":"list","Default":"\"\"","ValidValues":"non-null string","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"metrics.num.samples","Description":"The number of samples maintained to compute metrics.","Type":"int","Default":"2","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"metrics.recording.level","Description":"The highest recording level for metrics.","Type":"string","Default":"INFO","ValidValues":"[INFO, DEBUG]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"metrics.sample.window.ms","Description":"The window of time a metrics sample is computed over.","Type":"long","Default":"30000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"reconnect.backoff.max.ms","Description":"The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.","Type":"long","Default":"1000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"reconnect.backoff.ms","Description":"The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.","Type":"long","Default":"50","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"retry.backoff.ms","Description":"The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.","Type":"long","Default":"100","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.kerberos.kinit.cmd","Description":"Kerberos kinit command path.","Type":"string","Default":"/usr/bin/kinit","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.kerberos.min.time.before.relogin","Description":"Login thread sleep time between refresh attempts.","Type":"long","Default":"60000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.kerberos.ticket.renew.jitter","Description":"Percentage of random jitter added to the renewal time.","Type":"double","Default":"0.05","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.kerberos.ticket.renew.window.factor","Description":"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket.","Type":"double","Default":"0.8","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.login.refresh.buffer.seconds","Description":"The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"300","ValidValues":"[0,...,3600]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.login.refresh.min.period.seconds","Description":"The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"60","ValidValues":"[0,...,900]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.login.refresh.window.factor","Description":"Login refresh thread will sleep until the specified window factor relative to the credential's lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.8","ValidValues":"[0.5,...,1.0]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"sasl.login.refresh.window.jitter","Description":"The maximum amount of random jitter relative to the credential's lifetime that is added to the login refresh thread's sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.05","ValidValues":"[0.0,...,0.25]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.cipher.suites","Description":"A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.","Type":"list","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.endpoint.identification.algorithm","Description":"The endpoint identification algorithm to validate server hostname using server certificate. ","Type":"string","Default":"https","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.keymanager.algorithm","Description":"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"SunX509","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.secure.random.implementation","Description":"The SecureRandom PRNG implementation to use for SSL cryptography operations. ","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"ssl.trustmanager.algorithm","Description":"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"PKIX","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"transaction.timeout.ms","Description":"The maximum amount of time in ms that the transaction coordinator will wait for a transaction status update from the producer before proactively aborting the ongoing transaction.If this value is larger than the transaction.max.timeout.ms setting in the broker, the request will fail with a InvalidTransactionTimeout error.","Type":"int","Default":"60000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"producer","Name":"transactional.id","Description":"The TransactionalId to use for transactional delivery. This enables reliability semantics which span multiple producer sessions since it allows the client to guarantee that transactions using the same TransactionalId have been completed prior to starting any new transactions. If no TransactionalId is provided, then the producer is limited to idempotent delivery. Note that enable.idempotence must be enabled if a TransactionalId is configured. The default is null, which means transactions cannot be used. Note that, by default, transactions require a cluster of at least three brokers which is the recommended setting for production; for development you can change this, by adjusting broker setting transaction.state.log.replication.factor.","Type":"string","Default":"null","ValidValues":"non-empty string","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"key.deserializer","Description":"Deserializer class for key that implements the org.apache.kafka.common.serialization.Deserializer interface.","Type":"class","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"value.deserializer","Description":"Deserializer class for value that implements the org.apache.kafka.common.serialization.Deserializer interface.","Type":"class","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"bootstrap.servers","Description":"A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form host1:port1,host2:port2,.... Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).","Type":"list","Default":"\"\"","ValidValues":"non-null string","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"fetch.min.bytes","Description":"The minimum amount of data the server should return for a fetch request. If insufficient data is available the request will wait for that much data to accumulate before answering the request. The default setting of 1 byte means that fetch requests are answered as soon as a single byte of data is available or the fetch request times out waiting for data to arrive. Setting this to something greater than 1 will cause the server to wait for larger amounts of data to accumulate which can improve server throughput a bit at the cost of some additional latency.","Type":"int","Default":"1","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"group.id","Description":"A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer uses either the group management functionality by using subscribe(topic) or the Kafka-based offset management strategy.","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"heartbeat.interval.ms","Description":"The expected time between heartbeats to the consumer coordinator when using Kafka's group management facilities. Heartbeats are used to ensure that the consumer's session stays active and to facilitate rebalancing when new consumers join or leave the group. The value must be set lower than session.timeout.ms, but typically should be set no higher than 1/3 of that value. It can be adjusted even lower to control the expected time for normal rebalances.","Type":"int","Default":"3000","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"max.partition.fetch.bytes","Description":"The maximum amount of data per-partition the server will return. Records are fetched in batches by the consumer. If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. The maximum record batch size accepted by the broker is defined via message.max.bytes (broker config) or max.message.bytes (topic config). See fetch.max.bytes for limiting the consumer request size.","Type":"int","Default":"1048576","ValidValues":"[0,...]","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"session.timeout.ms","Description":"The timeout used to detect consumer failures when using Kafka's group management facility. The consumer sends periodic heartbeats to indicate its liveness to the broker. If no heartbeats are received by the broker before the expiration of this session timeout, then the broker will remove this consumer from the group and initiate a rebalance. Note that the value must be in the allowable range as configured in the broker configuration by group.min.session.timeout.ms and group.max.session.timeout.ms.","Type":"int","Default":"10000","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.key.password","Description":"The password of the private key in the key store file. This is optional for client.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.keystore.location","Description":"The location of the key store file. This is optional for client and can be used for two-way authentication for client.","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.keystore.password","Description":"The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured. ","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.truststore.location","Description":"The location of the trust store file. ","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.truststore.password","Description":"The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"allow.auto.create.topics","Description":"Allow automatic topic creation on the broker when subscribing to or assigning a topic. A topic being subscribed to will be automatically created only if the broker allows for it using `auto.create.topics.enable` broker configuration. This configuration must be set to `false` when using brokers older than 0.11.0","Type":"boolean","Default":"true","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"auto.offset.reset","Description":"What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted): earliest: automatically reset the offset to the earliest offsetlatest: automatically reset the offset to the latest offsetnone: throw exception to the consumer if no previous offset is found for the consumer's groupanything else: throw exception to the consumer.","Type":"string","Default":"latest","ValidValues":"[latest, earliest, none]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"client.dns.lookup","Description":"Controls how the client uses DNS lookups.If set to use_all_dns_ips then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.If the value is resolve_canonical_bootstrap_servers_only each entry will be resolved and expanded into a list of canonical names.","Type":"string","Default":"default","ValidValues":"[default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"connections.max.idle.ms","Description":"Close idle connections after the number of milliseconds specified by this config.","Type":"long","Default":"540000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"default.api.timeout.ms","Description":"Specifies the timeout (in milliseconds) for consumer APIs that could block. This configuration is used as the default timeout for all consumer operations that do not explicitly accept a timeout parameter.","Type":"int","Default":"60000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"enable.auto.commit","Description":"If true the consumer's offset will be periodically committed in the background.","Type":"boolean","Default":"true","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"exclude.internal.topics","Description":"Whether internal topics matching a subscribed pattern should be excluded from the subscription. It is always possible to explicitly subscribe to an internal topic.","Type":"boolean","Default":"true","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"fetch.max.bytes","Description":"The maximum amount of data the server should return for a fetch request. Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum. The maximum record batch size accepted by the broker is defined via message.max.bytes (broker config) or max.message.bytes (topic config). Note that the consumer performs multiple fetches in parallel.","Type":"int","Default":"52428800","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"group.instance.id","Description":"A unique identifier of the consumer instance provided by end user. Only non-empty strings are permitted. If set, the consumer is treated as a static member, which means that only one instance with this ID is allowed in the consumer group at any time. This can be used in combination with a larger session timeout to avoid group rebalances caused by transient unavailability (e.g. process restarts). If not set, the consumer will join the group as a dynamic member, which is the traditional behavior.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"isolation.level","Description":"Controls how to read messages written transactionally. If set to read_committed, consumer.poll() will only return transactional messages which have been committed. If set to read_uncommitted' (the default), consumer.poll() will return all messages, even transactional messages which have been aborted. Non-transactional messages will be returned unconditionally in either mode. Messages will always be returned in offset order. Hence, in  read_committed mode, consumer.poll() will only return messages up to the last stable offset (LSO), which is the one less than the offset of the first open transaction. In particular any messages appearing after messages belonging to ongoing transactions will be withheld until the relevant transaction has been completed. As a result, read_committed consumers will not be able to read up to the high watermark when there are in flight transactions. Further, when in read_committed the seekToEnd method will return the LSO","Type":"string","Default":"read_uncommitted","ValidValues":"[read_committed, read_uncommitted]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"max.poll.interval.ms","Description":"The maximum delay between invocations of poll() when using consumer group management. This places an upper bound on the amount of time that the consumer can be idle before fetching more records. If poll() is not called before expiration of this timeout, then the consumer is considered failed and the group will rebalance in order to reassign the partitions to another member. ","Type":"int","Default":"300000","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"max.poll.records","Description":"The maximum number of records returned in a single call to poll().","Type":"int","Default":"500","ValidValues":"[1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"partition.assignment.strategy","Description":"The class name of the partition assignment strategy that the client will use to distribute partition ownership amongst consumer instances when group management is used","Type":"list","Default":"class org.apache.kafka.clients.consumer.RangeAssignor","ValidValues":"non-null string","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"receive.buffer.bytes","Description":"The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.","Type":"int","Default":"65536","ValidValues":"[-1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"request.timeout.ms","Description":"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.","Type":"int","Default":"30000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.client.callback.handler.class","Description":"The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.jaas.config","Description":"JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described here. The format for the value is: 'loginModuleClass controlFlag (optionName=optionValue)*;'. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.kerberos.service.name","Description":"The Kerberos principal name that Kafka runs as. This can be defined either in Kafka's JAAS config or in Kafka's config.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.login.callback.handler.class","Description":"The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.login.class","Description":"The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.mechanism","Description":"SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.","Type":"string","Default":"GSSAPI","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"security.protocol","Description":"Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.","Type":"string","Default":"PLAINTEXT","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"send.buffer.bytes","Description":"The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.","Type":"int","Default":"131072","ValidValues":"[-1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.enabled.protocols","Description":"The list of protocols enabled for SSL connections.","Type":"list","Default":"TLSv1.2,TLSv1.1,TLSv1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.keystore.type","Description":"The file format of the key store file. This is optional for client.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.protocol","Description":"The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.","Type":"string","Default":"TLS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.provider","Description":"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.truststore.type","Description":"The file format of the trust store file.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"auto.commit.interval.ms","Description":"The frequency in milliseconds that the consumer offsets are auto-committed to Kafka if enable.auto.commit is set to true.","Type":"int","Default":"5000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"check.crcs","Description":"Automatically check the CRC32 of the records consumed. This ensures no on-the-wire or on-disk corruption to the messages occurred. This check adds some overhead, so it may be disabled in cases seeking extreme performance.","Type":"boolean","Default":"true","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"client.id","Description":"An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.","Type":"string","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"client.rack","Description":"A rack identifier for this client. This can be any string value which indicates where this client is physically located. It corresponds with the broker config 'broker.rack'","Type":"string","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"fetch.max.wait.ms","Description":"The maximum amount of time the server will block before answering the fetch request if there isn't sufficient data to immediately satisfy the requirement given by fetch.min.bytes.","Type":"int","Default":"500","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"interceptor.classes","Description":"A list of classes to use as interceptors. Implementing the org.apache.kafka.clients.consumer.ConsumerInterceptor interface allows you to intercept (and possibly mutate) records received by the consumer. By default, there are no interceptors.","Type":"list","Default":"\"\"","ValidValues":"non-null string","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"metadata.max.age.ms","Description":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions.","Type":"long","Default":"300000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"metric.reporters","Description":"A list of classes to use as metrics reporters. Implementing the org.apache.kafka.common.metrics.MetricsReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.","Type":"list","Default":"\"\"","ValidValues":"non-null string","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"metrics.num.samples","Description":"The number of samples maintained to compute metrics.","Type":"int","Default":"2","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"metrics.recording.level","Description":"The highest recording level for metrics.","Type":"string","Default":"INFO","ValidValues":"[INFO, DEBUG]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"metrics.sample.window.ms","Description":"The window of time a metrics sample is computed over.","Type":"long","Default":"30000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"reconnect.backoff.max.ms","Description":"The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.","Type":"long","Default":"1000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"reconnect.backoff.ms","Description":"The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.","Type":"long","Default":"50","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"retry.backoff.ms","Description":"The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.","Type":"long","Default":"100","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.kerberos.kinit.cmd","Description":"Kerberos kinit command path.","Type":"string","Default":"/usr/bin/kinit","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.kerberos.min.time.before.relogin","Description":"Login thread sleep time between refresh attempts.","Type":"long","Default":"60000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.kerberos.ticket.renew.jitter","Description":"Percentage of random jitter added to the renewal time.","Type":"double","Default":"0.05","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.kerberos.ticket.renew.window.factor","Description":"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket.","Type":"double","Default":"0.8","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.login.refresh.buffer.seconds","Description":"The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"300","ValidValues":"[0,...,3600]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.login.refresh.min.period.seconds","Description":"The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"60","ValidValues":"[0,...,900]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.login.refresh.window.factor","Description":"Login refresh thread will sleep until the specified window factor relative to the credential's lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.8","ValidValues":"[0.5,...,1.0]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"sasl.login.refresh.window.jitter","Description":"The maximum amount of random jitter relative to the credential's lifetime that is added to the login refresh thread's sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.05","ValidValues":"[0.0,...,0.25]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.cipher.suites","Description":"A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.","Type":"list","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.endpoint.identification.algorithm","Description":"The endpoint identification algorithm to validate server hostname using server certificate. ","Type":"string","Default":"https","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.keymanager.algorithm","Description":"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"SunX509","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.secure.random.implementation","Description":"The SecureRandom PRNG implementation to use for SSL cryptography operations. ","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"consumer","Name":"ssl.trustmanager.algorithm","Description":"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"PKIX","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"config.storage.topic","Description":"The name of the Kafka topic where connector configurations are stored","Type":"string","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"group.id","Description":"A unique string that identifies the Connect cluster group this worker belongs to.","Type":"string","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"key.converter","Description":"Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.","Type":"class","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"offset.storage.topic","Description":"The name of the Kafka topic where connector offsets are stored","Type":"string","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"status.storage.topic","Description":"The name of the Kafka topic where connector and task status are stored","Type":"string","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"value.converter","Description":"Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.","Type":"class","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"bootstrap.servers","Description":"A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form host1:port1,host2:port2,.... Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).","Type":"list","Default":"localhost:9092","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"heartbeat.interval.ms","Description":"The expected time between heartbeats to the group coordinator when using Kafka's group management facilities. Heartbeats are used to ensure that the worker's session stays active and to facilitate rebalancing when new members join or leave the group. The value must be set lower than session.timeout.ms, but typically should be set no higher than 1/3 of that value. It can be adjusted even lower to control the expected time for normal rebalances.","Type":"int","Default":"3000","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"rebalance.timeout.ms","Description":"The maximum allowed time for each worker to join the group once a rebalance has begun. This is basically a limit on the amount of time needed for all tasks to flush any pending data and commit offsets. If the timeout is exceeded, then the worker will be removed from the group, which will cause offset commit failures.","Type":"int","Default":"60000","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"session.timeout.ms","Description":"The timeout used to detect worker failures. The worker sends periodic heartbeats to indicate its liveness to the broker. If no heartbeats are received by the broker before the expiration of this session timeout, then the broker will remove the worker from the group and initiate a rebalance. Note that the value must be in the allowable range as configured in the broker configuration by group.min.session.timeout.ms and group.max.session.timeout.ms.","Type":"int","Default":"10000","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.key.password","Description":"The password of the private key in the key store file. This is optional for client.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.keystore.location","Description":"The location of the key store file. This is optional for client and can be used for two-way authentication for client.","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.keystore.password","Description":"The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured. ","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.truststore.location","Description":"The location of the trust store file. ","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.truststore.password","Description":"The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"client.dns.lookup","Description":"Controls how the client uses DNS lookups.If set to use_all_dns_ips then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.If the value is resolve_canonical_bootstrap_servers_only each entry will be resolved and expanded into a list of canonical names.","Type":"string","Default":"default","ValidValues":"[default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"connections.max.idle.ms","Description":"Close idle connections after the number of milliseconds specified by this config.","Type":"long","Default":"540000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"connector.client.config.override.policy","Description":"Class name or alias of implementation of ConnectorClientConfigOverridePolicy. Defines what client configurations can be overriden by the connector. The default implementation is `None`. The other possible policies in the framework include `All` and `Principal`. ","Type":"string","Default":"None","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"receive.buffer.bytes","Description":"The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.","Type":"int","Default":"32768","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"request.timeout.ms","Description":"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.","Type":"int","Default":"40000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.client.callback.handler.class","Description":"The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.jaas.config","Description":"JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described here. The format for the value is: 'loginModuleClass controlFlag (optionName=optionValue)*;'. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.kerberos.service.name","Description":"The Kerberos principal name that Kafka runs as. This can be defined either in Kafka's JAAS config or in Kafka's config.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.login.callback.handler.class","Description":"The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.login.class","Description":"The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.mechanism","Description":"SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.","Type":"string","Default":"GSSAPI","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"security.protocol","Description":"Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.","Type":"string","Default":"PLAINTEXT","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"send.buffer.bytes","Description":"The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.","Type":"int","Default":"131072","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.enabled.protocols","Description":"The list of protocols enabled for SSL connections.","Type":"list","Default":"TLSv1.2,TLSv1.1,TLSv1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.keystore.type","Description":"The file format of the key store file. This is optional for client.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.protocol","Description":"The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.","Type":"string","Default":"TLS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.provider","Description":"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.truststore.type","Description":"The file format of the trust store file.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"worker.sync.timeout.ms","Description":"When the worker is out of sync with other workers and needs to resynchronize configurations, wait up to this amount of time before giving up, leaving the group, and waiting a backoff period before rejoining.","Type":"int","Default":"3000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"worker.unsync.backoff.ms","Description":"When the worker is out of sync with other workers and  fails to catch up within worker.sync.timeout.ms, leave the Connect cluster for this long before rejoining.","Type":"int","Default":"300000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"access.control.allow.methods","Description":"Sets the methods supported for cross origin requests by setting the Access-Control-Allow-Methods header. The default value of the Access-Control-Allow-Methods header allows cross origin requests for GET, POST and HEAD.","Type":"string","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"access.control.allow.origin","Description":"Value to set the Access-Control-Allow-Origin header to for REST API requests.To enable cross origin access, set this to the domain of the application that should be permitted to access the API, or '*' to allow access from any domain. The default value only allows access from the domain of the REST API.","Type":"string","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"client.id","Description":"An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.","Type":"string","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"config.providers","Description":"Comma-separated names of ConfigProvider classes, loaded and used in the order specified. Implementing the interface  ConfigProvider allows you to replace variable references in connector configurations, such as for externalized secrets. ","Type":"list","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"config.storage.replication.factor","Description":"Replication factor used when creating the configuration storage topic","Type":"short","Default":"3","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"connect.protocol","Description":"Compatibility mode for Kafka Connect Protocol","Type":"string","Default":"compatible","ValidValues":"[eager, compatible]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"header.converter","Description":"HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.","Type":"class","Default":"org.apache.kafka.connect.storage.SimpleHeaderConverter","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"internal.key.converter","Description":"Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. This setting controls the format used for internal bookkeeping data used by the framework, such as configs and offsets, so users can typically use any functioning Converter implementation. Deprecated; will be removed in an upcoming version.","Type":"class","Default":"org.apache.kafka.connect.json.JsonConverter","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"internal.value.converter","Description":"Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. This setting controls the format used for internal bookkeeping data used by the framework, such as configs and offsets, so users can typically use any functioning Converter implementation. Deprecated; will be removed in an upcoming version.","Type":"class","Default":"org.apache.kafka.connect.json.JsonConverter","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"listeners","Description":"List of comma-separated URIs the REST API will listen on. The supported protocols are HTTP and HTTPS.\n Specify hostname as 0.0.0.0 to bind to all interfaces.\n Leave hostname empty to bind to default interface.\n Examples of legal listener lists: HTTP://myhost:8083,HTTPS://myhost:8084","Type":"list","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"metadata.max.age.ms","Description":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions.","Type":"long","Default":"300000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"metric.reporters","Description":"A list of classes to use as metrics reporters. Implementing the org.apache.kafka.common.metrics.MetricsReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.","Type":"list","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"metrics.num.samples","Description":"The number of samples maintained to compute metrics.","Type":"int","Default":"2","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"metrics.recording.level","Description":"The highest recording level for metrics.","Type":"string","Default":"INFO","ValidValues":"[INFO, DEBUG]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"metrics.sample.window.ms","Description":"The window of time a metrics sample is computed over.","Type":"long","Default":"30000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"offset.flush.interval.ms","Description":"Interval at which to try committing offsets for tasks.","Type":"long","Default":"60000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"offset.flush.timeout.ms","Description":"Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt.","Type":"long","Default":"5000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"offset.storage.partitions","Description":"The number of partitions used when creating the offset storage topic","Type":"int","Default":"25","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"offset.storage.replication.factor","Description":"Replication factor used when creating the offset storage topic","Type":"short","Default":"3","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"plugin.path","Description":"List of paths separated by commas (,) that contain plugins (connectors, converters, transformations). The list should consist of top level directories that include any combination of: \na) directories immediately containing jars with plugins and their dependencies\nb) uber-jars with plugins and their dependencies\nc) directories immediately containing the package directory structure of classes of plugins and their dependencies\nNote: symlinks will be followed to discover dependencies or plugins.\nExamples: plugin.path=/usr/local/share/java,/usr/local/share/kafka/plugins,/opt/connectors","Type":"list","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"reconnect.backoff.max.ms","Description":"The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.","Type":"long","Default":"1000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"reconnect.backoff.ms","Description":"The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.","Type":"long","Default":"50","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"rest.advertised.host.name","Description":"If this is set, this is the hostname that will be given out to other workers to connect to.","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"rest.advertised.listener","Description":"Sets the advertised listener (HTTP or HTTPS) which will be given to other workers to use.","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"rest.advertised.port","Description":"If this is set, this is the port that will be given out to other workers to connect to.","Type":"int","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"rest.extension.classes","Description":"Comma-separated names of ConnectRestExtension classes, loaded and called in the order specified. Implementing the interface  ConnectRestExtension allows you to inject into Connect's REST API user defined resources like filters. Typically used to add custom capability like logging, security, etc. ","Type":"list","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"rest.host.name","Description":"Hostname for the REST API. If this is set, it will only bind to this interface.","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"rest.port","Description":"Port for the REST API to listen on.","Type":"int","Default":"8083","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"retry.backoff.ms","Description":"The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.","Type":"long","Default":"100","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.kerberos.kinit.cmd","Description":"Kerberos kinit command path.","Type":"string","Default":"/usr/bin/kinit","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.kerberos.min.time.before.relogin","Description":"Login thread sleep time between refresh attempts.","Type":"long","Default":"60000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.kerberos.ticket.renew.jitter","Description":"Percentage of random jitter added to the renewal time.","Type":"double","Default":"0.05","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.kerberos.ticket.renew.window.factor","Description":"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket.","Type":"double","Default":"0.8","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.login.refresh.buffer.seconds","Description":"The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"300","ValidValues":"[0,...,3600]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.login.refresh.min.period.seconds","Description":"The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"60","ValidValues":"[0,...,900]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.login.refresh.window.factor","Description":"Login refresh thread will sleep until the specified window factor relative to the credential's lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.8","ValidValues":"[0.5,...,1.0]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"sasl.login.refresh.window.jitter","Description":"The maximum amount of random jitter relative to the credential's lifetime that is added to the login refresh thread's sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.05","ValidValues":"[0.0,...,0.25]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"scheduled.rebalance.max.delay.ms","Description":"Compatibility mode for Kafka Connect Protocol","Type":"int","Default":"300000","ValidValues":"[0,...,2147483647]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.cipher.suites","Description":"A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.","Type":"list","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.client.auth","Description":"Configures kafka broker to request client authentication. The following settings are common:   ssl.client.auth=required If set to required client authentication is required. ssl.client.auth=requested This means client authentication is optional. unlike requested , if this option is set client can choose not to provide authentication information about itself ssl.client.auth=none This means client authentication is not needed.","Type":"string","Default":"none","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.endpoint.identification.algorithm","Description":"The endpoint identification algorithm to validate server hostname using server certificate. ","Type":"string","Default":"https","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.keymanager.algorithm","Description":"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"SunX509","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.secure.random.implementation","Description":"The SecureRandom PRNG implementation to use for SSL cryptography operations. ","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"ssl.trustmanager.algorithm","Description":"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"PKIX","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"status.storage.partitions","Description":"The number of partitions used when creating the status storage topic","Type":"int","Default":"5","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"status.storage.replication.factor","Description":"Replication factor used when creating the status storage topic","Type":"short","Default":"3","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"connect","Name":"task.shutdown.graceful.timeout.ms","Description":"Amount of time to wait for tasks to shutdown gracefully. This is the total amount of time, not per task. All task have shutdown triggered, then they are waited on sequentially.","Type":"long","Default":"5000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"application.id","Description":"An identifier for the stream processing application. Must be unique within the Kafka cluster. It is used as 1) the default client-id prefix, 2) the group-id for membership management, 3) the changelog topic prefix.","Type":"string","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"bootstrap.servers","Description":"A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form host1:port1,host2:port2,.... Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).","Type":"list","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"replication.factor","Description":"The replication factor for change log topics and repartition topics created by the stream processing application.","Type":"int","Default":"1","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"state.dir","Description":"Directory location for state store.","Type":"string","Default":"/tmp/kafka-streams","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"cache.max.bytes.buffering","Description":"Maximum number of memory bytes to be used for buffering across all threads","Type":"long","Default":"10485760","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"client.id","Description":"An ID prefix string used for the client IDs of internal consumer, producer and restore-consumer, with pattern '-StreamThread--'.","Type":"string","Default":"\"\"","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"default.deserialization.exception.handler","Description":"Exception handling class that implements the org.apache.kafka.streams.errors.DeserializationExceptionHandler interface.","Type":"class","Default":"org.apache.kafka.streams.errors.LogAndFailExceptionHandler","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"default.key.serde","Description":" Default serializer / deserializer class for key that implements the org.apache.kafka.common.serialization.Serde interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the org.apache.kafka.common.serialization.Serde interface via 'default.windowed.key.serde.inner' or 'default.windowed.value.serde.inner' as well","Type":"class","Default":"org.apache.kafka.common.serialization.Serdes$ByteArraySerde","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"default.production.exception.handler","Description":"Exception handling class that implements the org.apache.kafka.streams.errors.ProductionExceptionHandler interface.","Type":"class","Default":"org.apache.kafka.streams.errors.DefaultProductionExceptionHandler","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"default.timestamp.extractor","Description":"Default timestamp extractor class that implements the org.apache.kafka.streams.processor.TimestampExtractor interface.","Type":"class","Default":"org.apache.kafka.streams.processor.FailOnInvalidTimestamp","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"default.value.serde","Description":"Default serializer / deserializer class for value that implements the org.apache.kafka.common.serialization.Serde interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the org.apache.kafka.common.serialization.Serde interface via 'default.windowed.key.serde.inner' or 'default.windowed.value.serde.inner' as well","Type":"class","Default":"org.apache.kafka.common.serialization.Serdes$ByteArraySerde","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"max.task.idle.ms","Description":"Maximum amount of time a stream task will stay idle when not all of its partition buffers contain records, to avoid potential out-of-order record processing across multiple input streams.","Type":"long","Default":"0","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"num.standby.replicas","Description":"The number of standby replicas for each task.","Type":"int","Default":"0","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"num.stream.threads","Description":"The number of threads to execute stream processing.","Type":"int","Default":"1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"processing.guarantee","Description":"The processing guarantee that should be used. Possible values are at_least_once (default) and exactly_once. Note that exactly-once processing requires a cluster of at least three brokers by default what is the recommended setting for production; for development you can change this, by adjusting broker setting transaction.state.log.replication.factor and transaction.state.log.min.isr.","Type":"string","Default":"at_least_once","ValidValues":"[at_least_once, exactly_once]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"security.protocol","Description":"Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.","Type":"string","Default":"PLAINTEXT","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"topology.optimization","Description":"A configuration telling Kafka Streams if it should optimize the topology, disabled by default","Type":"string","Default":"none","ValidValues":"[none, all]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"application.server","Description":"A host:port pair pointing to an embedded user defined endpoint that can be used for discovering the locations of state stores within a single KafkaStreams application","Type":"string","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"buffered.records.per.partition","Description":"Maximum number of records to buffer per partition.","Type":"int","Default":"1000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"commit.interval.ms","Description":"The frequency with which to save the position of the processor. (Note, if processing.guarantee is set to exactly_once, the default value is 100, otherwise the default value is 30000.","Type":"long","Default":"30000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"connections.max.idle.ms","Description":"Close idle connections after the number of milliseconds specified by this config.","Type":"long","Default":"540000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"metadata.max.age.ms","Description":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions.","Type":"long","Default":"300000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"metric.reporters","Description":"A list of classes to use as metrics reporters. Implementing the org.apache.kafka.common.metrics.MetricsReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.","Type":"list","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"metrics.num.samples","Description":"The number of samples maintained to compute metrics.","Type":"int","Default":"2","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"metrics.recording.level","Description":"The highest recording level for metrics.","Type":"string","Default":"INFO","ValidValues":"[INFO, DEBUG]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"metrics.sample.window.ms","Description":"The window of time a metrics sample is computed over.","Type":"long","Default":"30000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"partition.grouper","Description":"Partition grouper class that implements the org.apache.kafka.streams.processor.PartitionGrouper interface.","Type":"class","Default":"org.apache.kafka.streams.processor.DefaultPartitionGrouper","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"poll.ms","Description":"The amount of time in milliseconds to block waiting for input.","Type":"long","Default":"100","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"receive.buffer.bytes","Description":"The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.","Type":"int","Default":"32768","ValidValues":"[-1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"reconnect.backoff.max.ms","Description":"The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.","Type":"long","Default":"1000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"reconnect.backoff.ms","Description":"The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.","Type":"long","Default":"50","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"request.timeout.ms","Description":"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.","Type":"int","Default":"40000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"retries","Description":"Setting a value greater than zero will cause the client to resend any request that fails with a potentially transient error.","Type":"int","Default":"0","ValidValues":"[0,...,2147483647]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"retry.backoff.ms","Description":"The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.","Type":"long","Default":"100","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"rocksdb.config.setter","Description":"A Rocks DB config setter class or class name that implements the org.apache.kafka.streams.state.RocksDBConfigSetter interface","Type":"class","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"send.buffer.bytes","Description":"The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.","Type":"int","Default":"131072","ValidValues":"[-1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"state.cleanup.delay.ms","Description":"The amount of time in milliseconds to wait before deleting state when a partition has migrated. Only state directories that have not been modified for at least state.cleanup.delay.ms will be removed","Type":"long","Default":"600000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"upgrade.from","Description":"Allows upgrading from versions 0.10.0/0.10.1/0.10.2/0.11.0/1.0/1.1 to version 1.2 (or newer) in a backward compatible way. When upgrading from 1.2 to a newer version it is not required to specify this config.Default is null. Accepted values are \"0.10.0\", \"0.10.1\", \"0.10.2\", \"0.11.0\", \"1.0\", \"1.1\" (for upgrading from the corresponding old version).","Type":"string","Default":"null","ValidValues":"[null, 0.10.0, 0.10.1, 0.10.2, 0.11.0, 1.0, 1.1]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"streams","Name":"windowstore.changelog.additional.retention.ms","Description":"Added to a windows maintainMs to ensure data is not deleted from the log prematurely. Allows for clock drift. Default is 1 day","Type":"long","Default":"86400000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"bootstrap.servers","Description":"A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form host1:port1,host2:port2,.... Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).","Type":"list","Default":"","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.key.password","Description":"The password of the private key in the key store file. This is optional for client.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.keystore.location","Description":"The location of the key store file. This is optional for client and can be used for two-way authentication for client.","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.keystore.password","Description":"The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured. ","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.truststore.location","Description":"The location of the trust store file. ","Type":"string","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.truststore.password","Description":"The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.","Type":"password","Default":"null","ValidValues":"","Importance":"high","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"client.dns.lookup","Description":"Controls how the client uses DNS lookups.If set to use_all_dns_ips then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.If the value is resolve_canonical_bootstrap_servers_only each entry will be resolved and expanded into a list of canonical names.","Type":"string","Default":"default","ValidValues":"[default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"client.id","Description":"An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.","Type":"string","Default":"\"\"","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"connections.max.idle.ms","Description":"Close idle connections after the number of milliseconds specified by this config.","Type":"long","Default":"300000","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"receive.buffer.bytes","Description":"The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.","Type":"int","Default":"65536","ValidValues":"[-1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"request.timeout.ms","Description":"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.","Type":"int","Default":"120000","ValidValues":"[0,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.client.callback.handler.class","Description":"The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.jaas.config","Description":"JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described here. The format for the value is: 'loginModuleClass controlFlag (optionName=optionValue)*;'. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;","Type":"password","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.kerberos.service.name","Description":"The Kerberos principal name that Kafka runs as. This can be defined either in Kafka's JAAS config or in Kafka's config.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.login.callback.handler.class","Description":"The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.login.class","Description":"The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin","Type":"class","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.mechanism","Description":"SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.","Type":"string","Default":"GSSAPI","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"security.protocol","Description":"Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.","Type":"string","Default":"PLAINTEXT","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"send.buffer.bytes","Description":"The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.","Type":"int","Default":"131072","ValidValues":"[-1,...]","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.enabled.protocols","Description":"The list of protocols enabled for SSL connections.","Type":"list","Default":"TLSv1.2,TLSv1.1,TLSv1","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.keystore.type","Description":"The file format of the key store file. This is optional for client.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.protocol","Description":"The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.","Type":"string","Default":"TLS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.provider","Description":"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.","Type":"string","Default":"null","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.truststore.type","Description":"The file format of the trust store file.","Type":"string","Default":"JKS","ValidValues":"","Importance":"medium","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"metadata.max.age.ms","Description":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions.","Type":"long","Default":"300000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"metric.reporters","Description":"A list of classes to use as metrics reporters. Implementing the org.apache.kafka.common.metrics.MetricsReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.","Type":"list","Default":"\"\"","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"metrics.num.samples","Description":"The number of samples maintained to compute metrics.","Type":"int","Default":"2","ValidValues":"[1,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"metrics.recording.level","Description":"The highest recording level for metrics.","Type":"string","Default":"INFO","ValidValues":"[INFO, DEBUG]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"metrics.sample.window.ms","Description":"The window of time a metrics sample is computed over.","Type":"long","Default":"30000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"reconnect.backoff.max.ms","Description":"The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.","Type":"long","Default":"1000","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"reconnect.backoff.ms","Description":"The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.","Type":"long","Default":"50","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"retries","Description":"Setting a value greater than zero will cause the client to resend any request that fails with a potentially transient error.","Type":"int","Default":"5","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"retry.backoff.ms","Description":"The amount of time to wait before attempting to retry a failed request. This avoids repeatedly sending requests in a tight loop under some failure scenarios.","Type":"long","Default":"100","ValidValues":"[0,...]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.kerberos.kinit.cmd","Description":"Kerberos kinit command path.","Type":"string","Default":"/usr/bin/kinit","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.kerberos.min.time.before.relogin","Description":"Login thread sleep time between refresh attempts.","Type":"long","Default":"60000","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.kerberos.ticket.renew.jitter","Description":"Percentage of random jitter added to the renewal time.","Type":"double","Default":"0.05","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.kerberos.ticket.renew.window.factor","Description":"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket.","Type":"double","Default":"0.8","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.login.refresh.buffer.seconds","Description":"The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"300","ValidValues":"[0,...,3600]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.login.refresh.min.period.seconds","Description":"The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.","Type":"short","Default":"60","ValidValues":"[0,...,900]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.login.refresh.window.factor","Description":"Login refresh thread will sleep until the specified window factor relative to the credential's lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.8","ValidValues":"[0.5,...,1.0]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"sasl.login.refresh.window.jitter","Description":"The maximum amount of random jitter relative to the credential's lifetime that is added to the login refresh thread's sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.","Type":"double","Default":"0.05","ValidValues":"[0.0,...,0.25]","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.cipher.suites","Description":"A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.","Type":"list","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.endpoint.identification.algorithm","Description":"The endpoint identification algorithm to validate server hostname using server certificate. ","Type":"string","Default":"https","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.keymanager.algorithm","Description":"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"SunX509","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.secure.random.implementation","Description":"The SecureRandom PRNG implementation to use for SSL cryptography operations. ","Type":"string","Default":"null","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""},{"Category":"adminclient","Name":"ssl.trustmanager.algorithm","Description":"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.","Type":"string","Default":"PKIX","ValidValues":"","Importance":"low","DynamicUpdateMode":"","ServerDefaultProperty":""}]